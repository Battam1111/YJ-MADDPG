can't convert cuda:0 device type tensor to numpy. Use Tensor.cpu() to copy the tensor to host memory first.Traceback (most recent call last):
  File "/home/jnu/hyh/hcanet-3.27_copy/train.py", line 469, in <module>
    runner.run()
  File "/home/jnu/hyh/hcanet-3.27_copy/train.py", line 183, in run
    total_critic_loss += np.array([c.detach().numpy() for c in critic_loss])
  File "/home/jnu/hyh/hcanet-3.27_copy/train.py", line 183, in <listcomp>
    total_critic_loss += np.array([c.detach().numpy() for c in critic_loss])
TypeError: can't convert cuda:0 device type tensor to numpy. Use Tensor.cpu() to copy the tensor to host memory first.
The shape of the mask [512] at index 0 does not match the shape of the indexed tensor [640, 201] at index 0Traceback (most recent call last):
  File "/home/jnu/hyh/hcanet-3.27_ver2/train.py", line 382, in <module>
    runner.run()
  File "/home/jnu/hyh/hcanet-3.27_ver2/train.py", line 183, in run
    critic_loss, policy_loss = self.controller.update(i_step, self.param_dict)
  File "/home/jnu/hyh/hcanet-3.27_ver2/controllers.py", line 424, in update
    predicted_q_values_batch = self.UAVAgent.critic(state_batch, action_batch, i)
  File "/home/pc/anaconda3/envs/huyuhan/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/jnu/hyh/hcanet-3.27_ver2/nn/nets.py", line 329, in forward
    input_by_class[int(nt)] = y[node_mask, :in_size]
IndexError: The shape of the mask [512] at index 0 does not match the shape of the indexed tensor [640, 201] at index 0
local variable 'sum_factor' referenced before assignmentTraceback (most recent call last):
  File "/home/jnu/hyh/hcanet-3.27_ver4/train.py", line 382, in <module>
    runner.run()
  File "/home/jnu/hyh/hcanet-3.27_ver4/train.py", line 163, in run
    state_, adj_, reward, done, energy_consumption = self.env.step(actions, i_step, np.array(self.trajectory))
  File "/home/jnu/hyh/hcanet-3.27_ver4/env/sensingEnv.py", line 349, in step
    reward_charger = self.charger_reward_func(charger_pos, before_UAV_energy, UAV_pos, charger_target)
  File "/home/jnu/hyh/hcanet-3.27_ver4/env/sensingEnv.py", line 249, in charger_reward_func
    penalty_current += self.REWARD_CHARGE * sum_factor + self.PENALTY_NOT_CHARGE
UnboundLocalError: local variable 'sum_factor' referenced before assignment
zeros() received an invalid combination of arguments - got (float, device=torch.device, dtype=torch.dtype), but expected one of:
 * (tuple of ints size, *, tuple of names names, torch.dtype dtype, torch.layout layout, torch.device device, bool pin_memory, bool requires_grad)
 * (tuple of ints size, *, Tensor out, torch.dtype dtype, torch.layout layout, torch.device device, bool pin_memory, bool requires_grad)
Traceback (most recent call last):
  File "/home/jnu/hyh/hcanet-3.27_ver4/train.py", line 382, in <module>
    runner.run()
  File "/home/jnu/hyh/hcanet-3.27_ver4/train.py", line 135, in run
    current_state, cur_adj = self.env.reset()
  File "/home/jnu/hyh/hcanet-3.27_ver4/env/sensingEnv.py", line 480, in reset
    global_x[index], adj[index] = robot.get_observation(UAV_pos, charger_pos, 0, None)
  File "/home/jnu/hyh/hcanet-3.27_ver4/env/robot.py", line 61, in get_observation
    obstacle_pos = torch.zeros((self.LASER_NUM_HORIZONTAL/2), dtype=torch.float32, device=self.device)
TypeError: zeros() received an invalid combination of arguments - got (float, device=torch.device, dtype=torch.dtype), but expected one of:
 * (tuple of ints size, *, tuple of names names, torch.dtype dtype, torch.layout layout, torch.device device, bool pin_memory, bool requires_grad)
 * (tuple of ints size, *, Tensor out, torch.dtype dtype, torch.layout layout, torch.device device, bool pin_memory, bool requires_grad)

'float' object cannot be interpreted as an integerTraceback (most recent call last):
  File "/home/jnu/hyh/hcanet-3.27_ver4/train.py", line 382, in <module>
    runner.run()
  File "/home/jnu/hyh/hcanet-3.27_ver4/train.py", line 135, in run
    current_state, cur_adj = self.env.reset()
  File "/home/jnu/hyh/hcanet-3.27_ver4/env/sensingEnv.py", line 480, in reset
    global_x[index], adj[index] = robot.get_observation(UAV_pos, charger_pos, 0, None)
  File "/home/jnu/hyh/hcanet-3.27_ver4/env/robot.py", line 62, in get_observation
    unitRayVecs, froms, tos, results = rayTest(self.robot, self.LASER_LENGTH, ray_num_horizontal=self.LASER_NUM_HORIZONTAL/2, ray_num_vertical=0)
  File "/home/jnu/hyh/hcanet-3.27_ver4/env/utils.py", line 103, in rayTest
    unitRayVecs = np.array([[cos(alpha), sin(alpha), 0]  for alpha in np.linspace(-np.pi, np.pi, ray_num_horizontal)])
  File "/home/pc/anaconda3/envs/huyuhan/lib/python3.10/site-packages/numpy/core/function_base.py", line 122, in linspace
    num = operator.index(num)
TypeError: 'float' object cannot be interpreted as an integer
The expanded size of the tensor (187) must match the existing size (181) at non-singleton dimension 0.  Target sizes: [187].  Tensor sizes: [181]Traceback (most recent call last):
  File "/home/jnu/hyh/hcanet-3.27_ver6/train.py", line 382, in <module>
    runner.run()
  File "/home/jnu/hyh/hcanet-3.27_ver6/train.py", line 135, in run
    current_state, cur_adj = self.env.reset()
  File "/home/jnu/hyh/hcanet-3.27_ver6/env/sensingEnv.py", line 480, in reset
    global_x[index], adj[index] = robot.get_observation(UAV_pos, charger_pos, 0, None)
RuntimeError: The expanded size of the tensor (187) must match the existing size (181) at non-singleton dimension 0.  Target sizes: [187].  Tensor sizes: [181]
The expanded size of the tensor (181) must match the existing size (173) at non-singleton dimension 0.  Target sizes: [181].  Tensor sizes: [173]Traceback (most recent call last):
  File "/home/jnu/hyh/hcanet-3.27_ver6/train.py", line 382, in <module>
    runner.run()
  File "/home/jnu/hyh/hcanet-3.27_ver6/train.py", line 135, in run
    current_state, cur_adj = self.env.reset()
  File "/home/jnu/hyh/hcanet-3.27_ver6/env/sensingEnv.py", line 482, in reset
    global_x[index+self.NUM_DRONE], adj[index+self.NUM_DRONE] = charger.get_observation(UAV_pos, charger_pos, UAV_energy, 0, None)
RuntimeError: The expanded size of the tensor (181) must match the existing size (173) at non-singleton dimension 0.  Target sizes: [181].  Tensor sizes: [173]
The expanded size of the tensor (181) must match the existing size (179) at non-singleton dimension 0.  Target sizes: [181].  Tensor sizes: [179]Traceback (most recent call last):
  File "/home/jnu/hyh/hcanet-3.27_ver6/train.py", line 382, in <module>
    runner.run()
  File "/home/jnu/hyh/hcanet-3.27_ver6/train.py", line 135, in run
    current_state, cur_adj = self.env.reset()
  File "/home/jnu/hyh/hcanet-3.27_ver6/env/sensingEnv.py", line 482, in reset
    global_x[index+self.NUM_DRONE], adj[index+self.NUM_DRONE] = charger.get_observation(UAV_pos, charger_pos, UAV_energy, 0, None)
RuntimeError: The expanded size of the tensor (181) must match the existing size (179) at non-singleton dimension 0.  Target sizes: [181].  Tensor sizes: [179]
index 3 is out of bounds for axis 0 with size 3Traceback (most recent call last):
  File "/home/jnu/hyh/hcanet-3.27_ver6/train.py", line 382, in <module>
    runner.run()
  File "/home/jnu/hyh/hcanet-3.27_ver6/train.py", line 244, in run
    self.writer.add_scalar('Reward_4', episode_reward[3], self.episode_num)
IndexError: index 3 is out of bounds for axis 0 with size 3
'NoneType' object is not subscriptableTraceback (most recent call last):
  File "/home/jnu/hyh/hcanet-3.27_maddpg/train.py", line 367, in <module>
    runner.run()
  File "/home/jnu/hyh/hcanet-3.27_maddpg/train.py", line 151, in run
    state_, reward, done, energy_consumption = self.env.step(actions, i_step, np.array(self.trajectory))
  File "/home/jnu/hyh/hcanet-3.27_maddpg/env/sensingEnv.py", line 335, in step
    robot.apply_action(action=action[index])
TypeError: 'NoneType' object is not subscriptable
